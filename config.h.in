/*
 * Copyright (C) 2012-2013 Canonical, Ltd.
 *
 * Authors:
 *  Olivier Tilloy <olivier.tilloy@canonical.com>
 *
 * This file is part of messaging-app.
 *
 * messaging-app is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; version 3.
 *
 * messaging-app is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

// Qt
#include <QtCore/QCoreApplication>
#include <QtCore/QDir>
#include <QtDBus/QDBusConnection>
#include <QtDBus/QDBusConnectionInterface>
#include <QtDBus/QDBusReply>

#define I18N_DIRECTORY "@CMAKE_INSTALL_PREFIX@/share/locale"
#define UNITY8_QML_PATH "@UNITY8_QML_PATH@"
#define SNAP_PATH       "SNAP"
#define APP_DIR_PATH    "APP_DIR"

inline bool isRunningInstalled() {
    static bool installed = (QCoreApplication::applicationDirPath() ==
                             QDir(("@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_BINDIR@")).canonicalPath());
    return installed;
}

inline QString messagingAppDirectory() {
    if (qEnvironmentVariableIsSet(SNAP_PATH)) {
        return QString("%1/@CMAKE_INSTALL_PREFIX@/@MESSAGING_APP_DIR@/").arg(QString(qgetenv(SNAP_PATH)));
    } else if (isRunningInstalled()) {
        return QString("@CMAKE_INSTALL_PREFIX@/@MESSAGING_APP_DIR@/");
    } else if (qEnvironmentVariableIsSet(APP_DIR_PATH)) {
        return QString("%1/share/messaging-app/").arg(QString(qgetenv(APP_DIR_PATH)));
    } else {
        return QString("@CMAKE_SOURCE_DIR@/src/qml/");
    }
}

inline QString ubuntuPhonePluginPath() {
    if (isRunningInstalled() || qEnvironmentVariableIsSet(SNAP_PATH)) {
        return QString::null;
    } else {
        return QString("@CMAKE_SOURCE_DIR@/");
    }
}

inline bool isMessagingApplicationInstance() {
    return QCoreApplication::applicationName() == "MessagingApp";
}

inline bool isMessagingApplicationRunning() {
    QDBusReply<bool> reply = QDBusConnection::sessionBus().interface()->isServiceRegistered("com.canonical.MessagingApp");
    if (reply.isValid()) {
        return reply.value();
    }
    return false;
}
